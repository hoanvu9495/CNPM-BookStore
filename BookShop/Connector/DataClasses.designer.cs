#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Connector
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BookShop")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCHITIETDATHANG(CHITIETDATHANG instance);
    partial void UpdateCHITIETDATHANG(CHITIETDATHANG instance);
    partial void DeleteCHITIETDATHANG(CHITIETDATHANG instance);
    partial void InsertVIETSACH(VIETSACH instance);
    partial void UpdateVIETSACH(VIETSACH instance);
    partial void DeleteVIETSACH(VIETSACH instance);
    partial void InsertCHITIETHOADON(CHITIETHOADON instance);
    partial void UpdateCHITIETHOADON(CHITIETHOADON instance);
    partial void DeleteCHITIETHOADON(CHITIETHOADON instance);
    partial void InsertCHITIETKM(CHITIETKM instance);
    partial void UpdateCHITIETKM(CHITIETKM instance);
    partial void DeleteCHITIETKM(CHITIETKM instance);
    partial void InsertCHITIETPHIEUNHAP(CHITIETPHIEUNHAP instance);
    partial void UpdateCHITIETPHIEUNHAP(CHITIETPHIEUNHAP instance);
    partial void DeleteCHITIETPHIEUNHAP(CHITIETPHIEUNHAP instance);
    partial void InsertCHUDE(CHUDE instance);
    partial void UpdateCHUDE(CHUDE instance);
    partial void DeleteCHUDE(CHUDE instance);
    partial void InsertDATHANG(DATHANG instance);
    partial void UpdateDATHANG(DATHANG instance);
    partial void DeleteDATHANG(DATHANG instance);
    partial void InsertHOADON(HOADON instance);
    partial void UpdateHOADON(HOADON instance);
    partial void DeleteHOADON(HOADON instance);
    partial void InsertKHUYENMAI(KHUYENMAI instance);
    partial void UpdateKHUYENMAI(KHUYENMAI instance);
    partial void DeleteKHUYENMAI(KHUYENMAI instance);
    partial void InsertNHANVIEN(NHANVIEN instance);
    partial void UpdateNHANVIEN(NHANVIEN instance);
    partial void DeleteNHANVIEN(NHANVIEN instance);
    partial void InsertNHAXUATBAN(NHAXUATBAN instance);
    partial void UpdateNHAXUATBAN(NHAXUATBAN instance);
    partial void DeleteNHAXUATBAN(NHAXUATBAN instance);
    partial void InsertPHANQUYEN(PHANQUYEN instance);
    partial void UpdatePHANQUYEN(PHANQUYEN instance);
    partial void DeletePHANQUYEN(PHANQUYEN instance);
    partial void InsertPHIEUNHAP(PHIEUNHAP instance);
    partial void UpdatePHIEUNHAP(PHIEUNHAP instance);
    partial void DeletePHIEUNHAP(PHIEUNHAP instance);
    partial void InsertSACH(SACH instance);
    partial void UpdateSACH(SACH instance);
    partial void DeleteSACH(SACH instance);
    partial void InsertTACGIA(TACGIA instance);
    partial void UpdateTACGIA(TACGIA instance);
    partial void DeleteTACGIA(TACGIA instance);
    #endregion
		
		public DataClassesDataContext() : 
				base(global::Connector.Properties.Settings.Default.BookShopConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CHITIETDATHANG> CHITIETDATHANGs
		{
			get
			{
				return this.GetTable<CHITIETDATHANG>();
			}
		}
		
		public System.Data.Linq.Table<VIETSACH> VIETSACHes
		{
			get
			{
				return this.GetTable<VIETSACH>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETHOADON> CHITIETHOADONs
		{
			get
			{
				return this.GetTable<CHITIETHOADON>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETKM> CHITIETKMs
		{
			get
			{
				return this.GetTable<CHITIETKM>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETPHIEUNHAP> CHITIETPHIEUNHAPs
		{
			get
			{
				return this.GetTable<CHITIETPHIEUNHAP>();
			}
		}
		
		public System.Data.Linq.Table<CHUDE> CHUDEs
		{
			get
			{
				return this.GetTable<CHUDE>();
			}
		}
		
		public System.Data.Linq.Table<DATHANG> DATHANGs
		{
			get
			{
				return this.GetTable<DATHANG>();
			}
		}
		
		public System.Data.Linq.Table<HOADON> HOADONs
		{
			get
			{
				return this.GetTable<HOADON>();
			}
		}
		
		public System.Data.Linq.Table<KHUYENMAI> KHUYENMAIs
		{
			get
			{
				return this.GetTable<KHUYENMAI>();
			}
		}
		
		public System.Data.Linq.Table<NHANVIEN> NHANVIENs
		{
			get
			{
				return this.GetTable<NHANVIEN>();
			}
		}
		
		public System.Data.Linq.Table<NHAXUATBAN> NHAXUATBANs
		{
			get
			{
				return this.GetTable<NHAXUATBAN>();
			}
		}
		
		public System.Data.Linq.Table<PHANQUYEN> PHANQUYENs
		{
			get
			{
				return this.GetTable<PHANQUYEN>();
			}
		}
		
		public System.Data.Linq.Table<PHIEUNHAP> PHIEUNHAPs
		{
			get
			{
				return this.GetTable<PHIEUNHAP>();
			}
		}
		
		public System.Data.Linq.Table<SACH> SACHes
		{
			get
			{
				return this.GetTable<SACH>();
			}
		}
		
		public System.Data.Linq.Table<TACGIA> TACGIAs
		{
			get
			{
				return this.GetTable<TACGIA>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETDATHANG")]
	public partial class CHITIETDATHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_DH;
		
		private string _TENSACH;
		
		private System.Nullable<int> _SOLUONG;
		
		private System.Nullable<bool> _ISDELETE;
		
		private EntityRef<DATHANG> _DATHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_DHChanging(int value);
    partial void OnID_DHChanged();
    partial void OnTENSACHChanging(string value);
    partial void OnTENSACHChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    partial void OnISDELETEChanging(System.Nullable<bool> value);
    partial void OnISDELETEChanged();
    #endregion
		
		public CHITIETDATHANG()
		{
			this._DATHANG = default(EntityRef<DATHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_DH
		{
			get
			{
				return this._ID_DH;
			}
			set
			{
				if ((this._ID_DH != value))
				{
					if (this._DATHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_DHChanging(value);
					this.SendPropertyChanging();
					this._ID_DH = value;
					this.SendPropertyChanged("ID_DH");
					this.OnID_DHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENSACH", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TENSACH
		{
			get
			{
				return this._TENSACH;
			}
			set
			{
				if ((this._TENSACH != value))
				{
					this.OnTENSACHChanging(value);
					this.SendPropertyChanging();
					this._TENSACH = value;
					this.SendPropertyChanged("TENSACH");
					this.OnTENSACHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISDELETE", DbType="Bit")]
		public System.Nullable<bool> ISDELETE
		{
			get
			{
				return this._ISDELETE;
			}
			set
			{
				if ((this._ISDELETE != value))
				{
					this.OnISDELETEChanging(value);
					this.SendPropertyChanging();
					this._ISDELETE = value;
					this.SendPropertyChanged("ISDELETE");
					this.OnISDELETEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DATHANG_CHITIETDATHANG", Storage="_DATHANG", ThisKey="ID_DH", OtherKey="ID", IsForeignKey=true)]
		public DATHANG DATHANG
		{
			get
			{
				return this._DATHANG.Entity;
			}
			set
			{
				DATHANG previousValue = this._DATHANG.Entity;
				if (((previousValue != value) 
							|| (this._DATHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DATHANG.Entity = null;
						previousValue.CHITIETDATHANGs.Remove(this);
					}
					this._DATHANG.Entity = value;
					if ((value != null))
					{
						value.CHITIETDATHANGs.Add(this);
						this._ID_DH = value.ID;
					}
					else
					{
						this._ID_DH = default(int);
					}
					this.SendPropertyChanged("DATHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VIETSACH")]
	public partial class VIETSACH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_SACH;
		
		private int _ID_TACGIA;
		
		private System.Nullable<System.DateTime> _NGAYVIET;
		
		private string _VAITRO;
		
		private System.Nullable<bool> _ISDELETE;
		
		private EntityRef<SACH> _SACH;
		
		private EntityRef<TACGIA> _TACGIA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_SACHChanging(int value);
    partial void OnID_SACHChanged();
    partial void OnID_TACGIAChanging(int value);
    partial void OnID_TACGIAChanged();
    partial void OnNGAYVIETChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYVIETChanged();
    partial void OnVAITROChanging(string value);
    partial void OnVAITROChanged();
    partial void OnISDELETEChanging(System.Nullable<bool> value);
    partial void OnISDELETEChanged();
    #endregion
		
		public VIETSACH()
		{
			this._SACH = default(EntityRef<SACH>);
			this._TACGIA = default(EntityRef<TACGIA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SACH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_SACH
		{
			get
			{
				return this._ID_SACH;
			}
			set
			{
				if ((this._ID_SACH != value))
				{
					if (this._SACH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SACHChanging(value);
					this.SendPropertyChanging();
					this._ID_SACH = value;
					this.SendPropertyChanged("ID_SACH");
					this.OnID_SACHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TACGIA", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_TACGIA
		{
			get
			{
				return this._ID_TACGIA;
			}
			set
			{
				if ((this._ID_TACGIA != value))
				{
					if (this._TACGIA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TACGIAChanging(value);
					this.SendPropertyChanging();
					this._ID_TACGIA = value;
					this.SendPropertyChanged("ID_TACGIA");
					this.OnID_TACGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYVIET", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYVIET
		{
			get
			{
				return this._NGAYVIET;
			}
			set
			{
				if ((this._NGAYVIET != value))
				{
					this.OnNGAYVIETChanging(value);
					this.SendPropertyChanging();
					this._NGAYVIET = value;
					this.SendPropertyChanged("NGAYVIET");
					this.OnNGAYVIETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VAITRO", DbType="NVarChar(20)")]
		public string VAITRO
		{
			get
			{
				return this._VAITRO;
			}
			set
			{
				if ((this._VAITRO != value))
				{
					this.OnVAITROChanging(value);
					this.SendPropertyChanging();
					this._VAITRO = value;
					this.SendPropertyChanged("VAITRO");
					this.OnVAITROChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISDELETE", DbType="Bit")]
		public System.Nullable<bool> ISDELETE
		{
			get
			{
				return this._ISDELETE;
			}
			set
			{
				if ((this._ISDELETE != value))
				{
					this.OnISDELETEChanging(value);
					this.SendPropertyChanging();
					this._ISDELETE = value;
					this.SendPropertyChanged("ISDELETE");
					this.OnISDELETEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SACH_VIETSACH", Storage="_SACH", ThisKey="ID_SACH", OtherKey="ID", IsForeignKey=true)]
		public SACH SACH
		{
			get
			{
				return this._SACH.Entity;
			}
			set
			{
				SACH previousValue = this._SACH.Entity;
				if (((previousValue != value) 
							|| (this._SACH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SACH.Entity = null;
						previousValue.VIETSACHes.Remove(this);
					}
					this._SACH.Entity = value;
					if ((value != null))
					{
						value.VIETSACHes.Add(this);
						this._ID_SACH = value.ID;
					}
					else
					{
						this._ID_SACH = default(int);
					}
					this.SendPropertyChanged("SACH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TACGIA_VIETSACH", Storage="_TACGIA", ThisKey="ID_TACGIA", OtherKey="ID", IsForeignKey=true)]
		public TACGIA TACGIA
		{
			get
			{
				return this._TACGIA.Entity;
			}
			set
			{
				TACGIA previousValue = this._TACGIA.Entity;
				if (((previousValue != value) 
							|| (this._TACGIA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TACGIA.Entity = null;
						previousValue.VIETSACHes.Remove(this);
					}
					this._TACGIA.Entity = value;
					if ((value != null))
					{
						value.VIETSACHes.Add(this);
						this._ID_TACGIA = value.ID;
					}
					else
					{
						this._ID_TACGIA = default(int);
					}
					this.SendPropertyChanged("TACGIA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETHOADON")]
	public partial class CHITIETHOADON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_HD;
		
		private int _ID_SACH;
		
		private System.Nullable<int> _SOLUONG;
		
		private System.Nullable<int> _GIA;
		
		private System.Nullable<int> _PTKM;
		
		private System.Nullable<bool> _ISDELETE;
		
		private EntityRef<HOADON> _HOADON;
		
		private EntityRef<SACH> _SACH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_HDChanging(int value);
    partial void OnID_HDChanged();
    partial void OnID_SACHChanging(int value);
    partial void OnID_SACHChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    partial void OnGIAChanging(System.Nullable<int> value);
    partial void OnGIAChanged();
    partial void OnPTKMChanging(System.Nullable<int> value);
    partial void OnPTKMChanged();
    partial void OnISDELETEChanging(System.Nullable<bool> value);
    partial void OnISDELETEChanged();
    #endregion
		
		public CHITIETHOADON()
		{
			this._HOADON = default(EntityRef<HOADON>);
			this._SACH = default(EntityRef<SACH>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_HD", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_HD
		{
			get
			{
				return this._ID_HD;
			}
			set
			{
				if ((this._ID_HD != value))
				{
					if (this._HOADON.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_HDChanging(value);
					this.SendPropertyChanging();
					this._ID_HD = value;
					this.SendPropertyChanged("ID_HD");
					this.OnID_HDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SACH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_SACH
		{
			get
			{
				return this._ID_SACH;
			}
			set
			{
				if ((this._ID_SACH != value))
				{
					if (this._SACH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SACHChanging(value);
					this.SendPropertyChanging();
					this._ID_SACH = value;
					this.SendPropertyChanged("ID_SACH");
					this.OnID_SACHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIA", DbType="Int")]
		public System.Nullable<int> GIA
		{
			get
			{
				return this._GIA;
			}
			set
			{
				if ((this._GIA != value))
				{
					this.OnGIAChanging(value);
					this.SendPropertyChanging();
					this._GIA = value;
					this.SendPropertyChanged("GIA");
					this.OnGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTKM", DbType="Int")]
		public System.Nullable<int> PTKM
		{
			get
			{
				return this._PTKM;
			}
			set
			{
				if ((this._PTKM != value))
				{
					this.OnPTKMChanging(value);
					this.SendPropertyChanging();
					this._PTKM = value;
					this.SendPropertyChanged("PTKM");
					this.OnPTKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISDELETE", DbType="Bit")]
		public System.Nullable<bool> ISDELETE
		{
			get
			{
				return this._ISDELETE;
			}
			set
			{
				if ((this._ISDELETE != value))
				{
					this.OnISDELETEChanging(value);
					this.SendPropertyChanging();
					this._ISDELETE = value;
					this.SendPropertyChanged("ISDELETE");
					this.OnISDELETEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADON_CHITIETHOADON", Storage="_HOADON", ThisKey="ID_HD", OtherKey="ID", IsForeignKey=true)]
		public HOADON HOADON
		{
			get
			{
				return this._HOADON.Entity;
			}
			set
			{
				HOADON previousValue = this._HOADON.Entity;
				if (((previousValue != value) 
							|| (this._HOADON.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOADON.Entity = null;
						previousValue.CHITIETHOADONs.Remove(this);
					}
					this._HOADON.Entity = value;
					if ((value != null))
					{
						value.CHITIETHOADONs.Add(this);
						this._ID_HD = value.ID;
					}
					else
					{
						this._ID_HD = default(int);
					}
					this.SendPropertyChanged("HOADON");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SACH_CHITIETHOADON", Storage="_SACH", ThisKey="ID_SACH", OtherKey="ID", IsForeignKey=true)]
		public SACH SACH
		{
			get
			{
				return this._SACH.Entity;
			}
			set
			{
				SACH previousValue = this._SACH.Entity;
				if (((previousValue != value) 
							|| (this._SACH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SACH.Entity = null;
						previousValue.CHITIETHOADONs.Remove(this);
					}
					this._SACH.Entity = value;
					if ((value != null))
					{
						value.CHITIETHOADONs.Add(this);
						this._ID_SACH = value.ID;
					}
					else
					{
						this._ID_SACH = default(int);
					}
					this.SendPropertyChanged("SACH");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETKM")]
	public partial class CHITIETKM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_KM;
		
		private int _ID_SACH;
		
		private System.Nullable<int> _PTKM;
		
		private System.Nullable<bool> _ISDELETE;
		
		private EntityRef<KHUYENMAI> _KHUYENMAI;
		
		private EntityRef<SACH> _SACH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_KMChanging(int value);
    partial void OnID_KMChanged();
    partial void OnID_SACHChanging(int value);
    partial void OnID_SACHChanged();
    partial void OnPTKMChanging(System.Nullable<int> value);
    partial void OnPTKMChanged();
    partial void OnISDELETEChanging(System.Nullable<bool> value);
    partial void OnISDELETEChanged();
    #endregion
		
		public CHITIETKM()
		{
			this._KHUYENMAI = default(EntityRef<KHUYENMAI>);
			this._SACH = default(EntityRef<SACH>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_KM", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_KM
		{
			get
			{
				return this._ID_KM;
			}
			set
			{
				if ((this._ID_KM != value))
				{
					if (this._KHUYENMAI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_KMChanging(value);
					this.SendPropertyChanging();
					this._ID_KM = value;
					this.SendPropertyChanged("ID_KM");
					this.OnID_KMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SACH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_SACH
		{
			get
			{
				return this._ID_SACH;
			}
			set
			{
				if ((this._ID_SACH != value))
				{
					if (this._SACH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SACHChanging(value);
					this.SendPropertyChanging();
					this._ID_SACH = value;
					this.SendPropertyChanged("ID_SACH");
					this.OnID_SACHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTKM", DbType="Int")]
		public System.Nullable<int> PTKM
		{
			get
			{
				return this._PTKM;
			}
			set
			{
				if ((this._PTKM != value))
				{
					this.OnPTKMChanging(value);
					this.SendPropertyChanging();
					this._PTKM = value;
					this.SendPropertyChanged("PTKM");
					this.OnPTKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISDELETE", DbType="Bit")]
		public System.Nullable<bool> ISDELETE
		{
			get
			{
				return this._ISDELETE;
			}
			set
			{
				if ((this._ISDELETE != value))
				{
					this.OnISDELETEChanging(value);
					this.SendPropertyChanging();
					this._ISDELETE = value;
					this.SendPropertyChanged("ISDELETE");
					this.OnISDELETEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHUYENMAI_CHITIETKM", Storage="_KHUYENMAI", ThisKey="ID_KM", OtherKey="ID", IsForeignKey=true)]
		public KHUYENMAI KHUYENMAI
		{
			get
			{
				return this._KHUYENMAI.Entity;
			}
			set
			{
				KHUYENMAI previousValue = this._KHUYENMAI.Entity;
				if (((previousValue != value) 
							|| (this._KHUYENMAI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHUYENMAI.Entity = null;
						previousValue.CHITIETKMs.Remove(this);
					}
					this._KHUYENMAI.Entity = value;
					if ((value != null))
					{
						value.CHITIETKMs.Add(this);
						this._ID_KM = value.ID;
					}
					else
					{
						this._ID_KM = default(int);
					}
					this.SendPropertyChanged("KHUYENMAI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SACH_CHITIETKM", Storage="_SACH", ThisKey="ID_SACH", OtherKey="ID", IsForeignKey=true)]
		public SACH SACH
		{
			get
			{
				return this._SACH.Entity;
			}
			set
			{
				SACH previousValue = this._SACH.Entity;
				if (((previousValue != value) 
							|| (this._SACH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SACH.Entity = null;
						previousValue.CHITIETKMs.Remove(this);
					}
					this._SACH.Entity = value;
					if ((value != null))
					{
						value.CHITIETKMs.Add(this);
						this._ID_SACH = value.ID;
					}
					else
					{
						this._ID_SACH = default(int);
					}
					this.SendPropertyChanged("SACH");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETPHIEUNHAP")]
	public partial class CHITIETPHIEUNHAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_PN;
		
		private int _ID_SACH;
		
		private System.Nullable<int> _SOLUONG;
		
		private System.Nullable<bool> _ISDELETE;
		
		private EntityRef<PHIEUNHAP> _PHIEUNHAP;
		
		private EntityRef<SACH> _SACH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_PNChanging(int value);
    partial void OnID_PNChanged();
    partial void OnID_SACHChanging(int value);
    partial void OnID_SACHChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    partial void OnISDELETEChanging(System.Nullable<bool> value);
    partial void OnISDELETEChanged();
    #endregion
		
		public CHITIETPHIEUNHAP()
		{
			this._PHIEUNHAP = default(EntityRef<PHIEUNHAP>);
			this._SACH = default(EntityRef<SACH>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PN", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_PN
		{
			get
			{
				return this._ID_PN;
			}
			set
			{
				if ((this._ID_PN != value))
				{
					if (this._PHIEUNHAP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PNChanging(value);
					this.SendPropertyChanging();
					this._ID_PN = value;
					this.SendPropertyChanged("ID_PN");
					this.OnID_PNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SACH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_SACH
		{
			get
			{
				return this._ID_SACH;
			}
			set
			{
				if ((this._ID_SACH != value))
				{
					if (this._SACH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SACHChanging(value);
					this.SendPropertyChanging();
					this._ID_SACH = value;
					this.SendPropertyChanged("ID_SACH");
					this.OnID_SACHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISDELETE", DbType="Bit")]
		public System.Nullable<bool> ISDELETE
		{
			get
			{
				return this._ISDELETE;
			}
			set
			{
				if ((this._ISDELETE != value))
				{
					this.OnISDELETEChanging(value);
					this.SendPropertyChanging();
					this._ISDELETE = value;
					this.SendPropertyChanged("ISDELETE");
					this.OnISDELETEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUNHAP_CHITIETPHIEUNHAP", Storage="_PHIEUNHAP", ThisKey="ID_PN", OtherKey="ID", IsForeignKey=true)]
		public PHIEUNHAP PHIEUNHAP
		{
			get
			{
				return this._PHIEUNHAP.Entity;
			}
			set
			{
				PHIEUNHAP previousValue = this._PHIEUNHAP.Entity;
				if (((previousValue != value) 
							|| (this._PHIEUNHAP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEUNHAP.Entity = null;
						previousValue.CHITIETPHIEUNHAPs.Remove(this);
					}
					this._PHIEUNHAP.Entity = value;
					if ((value != null))
					{
						value.CHITIETPHIEUNHAPs.Add(this);
						this._ID_PN = value.ID;
					}
					else
					{
						this._ID_PN = default(int);
					}
					this.SendPropertyChanged("PHIEUNHAP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SACH_CHITIETPHIEUNHAP", Storage="_SACH", ThisKey="ID_SACH", OtherKey="ID", IsForeignKey=true)]
		public SACH SACH
		{
			get
			{
				return this._SACH.Entity;
			}
			set
			{
				SACH previousValue = this._SACH.Entity;
				if (((previousValue != value) 
							|| (this._SACH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SACH.Entity = null;
						previousValue.CHITIETPHIEUNHAPs.Remove(this);
					}
					this._SACH.Entity = value;
					if ((value != null))
					{
						value.CHITIETPHIEUNHAPs.Add(this);
						this._ID_SACH = value.ID;
					}
					else
					{
						this._ID_SACH = default(int);
					}
					this.SendPropertyChanged("SACH");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHUDE")]
	public partial class CHUDE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TEN;
		
		private System.Nullable<bool> _ISDELETE;
		
		private EntitySet<SACH> _SACHes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTENChanging(string value);
    partial void OnTENChanged();
    partial void OnISDELETEChanging(System.Nullable<bool> value);
    partial void OnISDELETEChanged();
    #endregion
		
		public CHUDE()
		{
			this._SACHes = new EntitySet<SACH>(new Action<SACH>(this.attach_SACHes), new Action<SACH>(this.detach_SACHes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TEN
		{
			get
			{
				return this._TEN;
			}
			set
			{
				if ((this._TEN != value))
				{
					this.OnTENChanging(value);
					this.SendPropertyChanging();
					this._TEN = value;
					this.SendPropertyChanged("TEN");
					this.OnTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISDELETE", DbType="Bit")]
		public System.Nullable<bool> ISDELETE
		{
			get
			{
				return this._ISDELETE;
			}
			set
			{
				if ((this._ISDELETE != value))
				{
					this.OnISDELETEChanging(value);
					this.SendPropertyChanging();
					this._ISDELETE = value;
					this.SendPropertyChanged("ISDELETE");
					this.OnISDELETEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUDE_SACH", Storage="_SACHes", ThisKey="ID", OtherKey="ID_CHUDE")]
		public EntitySet<SACH> SACHes
		{
			get
			{
				return this._SACHes;
			}
			set
			{
				this._SACHes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SACHes(SACH entity)
		{
			this.SendPropertyChanging();
			entity.CHUDE = this;
		}
		
		private void detach_SACHes(SACH entity)
		{
			this.SendPropertyChanging();
			entity.CHUDE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DATHANG")]
	public partial class DATHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _SOLUONG;
		
		private string _TENKH;
		
		private string _SDTKH;
		
		private string _DIACHIKH;
		
		private System.Nullable<System.DateTime> _NGAYDAT;
		
		private System.Nullable<bool> _ISDELETE;
		
		private EntitySet<CHITIETDATHANG> _CHITIETDATHANGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    partial void OnTENKHChanging(string value);
    partial void OnTENKHChanged();
    partial void OnSDTKHChanging(string value);
    partial void OnSDTKHChanged();
    partial void OnDIACHIKHChanging(string value);
    partial void OnDIACHIKHChanged();
    partial void OnNGAYDATChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYDATChanged();
    partial void OnISDELETEChanging(System.Nullable<bool> value);
    partial void OnISDELETEChanged();
    #endregion
		
		public DATHANG()
		{
			this._CHITIETDATHANGs = new EntitySet<CHITIETDATHANG>(new Action<CHITIETDATHANG>(this.attach_CHITIETDATHANGs), new Action<CHITIETDATHANG>(this.detach_CHITIETDATHANGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENKH", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TENKH
		{
			get
			{
				return this._TENKH;
			}
			set
			{
				if ((this._TENKH != value))
				{
					this.OnTENKHChanging(value);
					this.SendPropertyChanging();
					this._TENKH = value;
					this.SendPropertyChanged("TENKH");
					this.OnTENKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDTKH", DbType="Char(13)")]
		public string SDTKH
		{
			get
			{
				return this._SDTKH;
			}
			set
			{
				if ((this._SDTKH != value))
				{
					this.OnSDTKHChanging(value);
					this.SendPropertyChanging();
					this._SDTKH = value;
					this.SendPropertyChanged("SDTKH");
					this.OnSDTKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHIKH", DbType="NVarChar(50)")]
		public string DIACHIKH
		{
			get
			{
				return this._DIACHIKH;
			}
			set
			{
				if ((this._DIACHIKH != value))
				{
					this.OnDIACHIKHChanging(value);
					this.SendPropertyChanging();
					this._DIACHIKH = value;
					this.SendPropertyChanged("DIACHIKH");
					this.OnDIACHIKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYDAT", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYDAT
		{
			get
			{
				return this._NGAYDAT;
			}
			set
			{
				if ((this._NGAYDAT != value))
				{
					this.OnNGAYDATChanging(value);
					this.SendPropertyChanging();
					this._NGAYDAT = value;
					this.SendPropertyChanged("NGAYDAT");
					this.OnNGAYDATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISDELETE", DbType="Bit")]
		public System.Nullable<bool> ISDELETE
		{
			get
			{
				return this._ISDELETE;
			}
			set
			{
				if ((this._ISDELETE != value))
				{
					this.OnISDELETEChanging(value);
					this.SendPropertyChanging();
					this._ISDELETE = value;
					this.SendPropertyChanged("ISDELETE");
					this.OnISDELETEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DATHANG_CHITIETDATHANG", Storage="_CHITIETDATHANGs", ThisKey="ID", OtherKey="ID_DH")]
		public EntitySet<CHITIETDATHANG> CHITIETDATHANGs
		{
			get
			{
				return this._CHITIETDATHANGs;
			}
			set
			{
				this._CHITIETDATHANGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETDATHANGs(CHITIETDATHANG entity)
		{
			this.SendPropertyChanging();
			entity.DATHANG = this;
		}
		
		private void detach_CHITIETDATHANGs(CHITIETDATHANG entity)
		{
			this.SendPropertyChanging();
			entity.DATHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOADON")]
	public partial class HOADON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ID_NV;
		
		private System.Nullable<int> _THANHTIEN;
		
		private System.Nullable<System.DateTime> _NGAY;
		
		private System.Nullable<int> _SOLUONG;
		
		private System.Nullable<bool> _ISDELETE;
		
		private EntitySet<CHITIETHOADON> _CHITIETHOADONs;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_NVChanging(System.Nullable<int> value);
    partial void OnID_NVChanged();
    partial void OnTHANHTIENChanging(System.Nullable<int> value);
    partial void OnTHANHTIENChanged();
    partial void OnNGAYChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    partial void OnISDELETEChanging(System.Nullable<bool> value);
    partial void OnISDELETEChanged();
    #endregion
		
		public HOADON()
		{
			this._CHITIETHOADONs = new EntitySet<CHITIETHOADON>(new Action<CHITIETHOADON>(this.attach_CHITIETHOADONs), new Action<CHITIETHOADON>(this.detach_CHITIETHOADONs));
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NV", DbType="Int")]
		public System.Nullable<int> ID_NV
		{
			get
			{
				return this._ID_NV;
			}
			set
			{
				if ((this._ID_NV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_NVChanging(value);
					this.SendPropertyChanging();
					this._ID_NV = value;
					this.SendPropertyChanged("ID_NV");
					this.OnID_NVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THANHTIEN", DbType="Int")]
		public System.Nullable<int> THANHTIEN
		{
			get
			{
				return this._THANHTIEN;
			}
			set
			{
				if ((this._THANHTIEN != value))
				{
					this.OnTHANHTIENChanging(value);
					this.SendPropertyChanging();
					this._THANHTIEN = value;
					this.SendPropertyChanged("THANHTIEN");
					this.OnTHANHTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAY", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAY
		{
			get
			{
				return this._NGAY;
			}
			set
			{
				if ((this._NGAY != value))
				{
					this.OnNGAYChanging(value);
					this.SendPropertyChanging();
					this._NGAY = value;
					this.SendPropertyChanged("NGAY");
					this.OnNGAYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISDELETE", DbType="Bit")]
		public System.Nullable<bool> ISDELETE
		{
			get
			{
				return this._ISDELETE;
			}
			set
			{
				if ((this._ISDELETE != value))
				{
					this.OnISDELETEChanging(value);
					this.SendPropertyChanging();
					this._ISDELETE = value;
					this.SendPropertyChanged("ISDELETE");
					this.OnISDELETEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADON_CHITIETHOADON", Storage="_CHITIETHOADONs", ThisKey="ID", OtherKey="ID_HD")]
		public EntitySet<CHITIETHOADON> CHITIETHOADONs
		{
			get
			{
				return this._CHITIETHOADONs;
			}
			set
			{
				this._CHITIETHOADONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_HOADON", Storage="_NHANVIEN", ThisKey="ID_NV", OtherKey="ID", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.HOADONs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.HOADONs.Add(this);
						this._ID_NV = value.ID;
					}
					else
					{
						this._ID_NV = default(Nullable<int>);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETHOADONs(CHITIETHOADON entity)
		{
			this.SendPropertyChanging();
			entity.HOADON = this;
		}
		
		private void detach_CHITIETHOADONs(CHITIETHOADON entity)
		{
			this.SendPropertyChanging();
			entity.HOADON = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHUYENMAI")]
	public partial class KHUYENMAI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TENKM;
		
		private System.Nullable<System.DateTime> _NGAYBATDAU;
		
		private System.Nullable<System.DateTime> _NGAYKETTHUC;
		
		private System.Nullable<bool> _ISDELETE;
		
		private EntitySet<CHITIETKM> _CHITIETKMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTENKMChanging(string value);
    partial void OnTENKMChanged();
    partial void OnNGAYBATDAUChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYBATDAUChanged();
    partial void OnNGAYKETTHUCChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYKETTHUCChanged();
    partial void OnISDELETEChanging(System.Nullable<bool> value);
    partial void OnISDELETEChanged();
    #endregion
		
		public KHUYENMAI()
		{
			this._CHITIETKMs = new EntitySet<CHITIETKM>(new Action<CHITIETKM>(this.attach_CHITIETKMs), new Action<CHITIETKM>(this.detach_CHITIETKMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENKM", DbType="NVarChar(50)")]
		public string TENKM
		{
			get
			{
				return this._TENKM;
			}
			set
			{
				if ((this._TENKM != value))
				{
					this.OnTENKMChanging(value);
					this.SendPropertyChanging();
					this._TENKM = value;
					this.SendPropertyChanged("TENKM");
					this.OnTENKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYBATDAU", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYBATDAU
		{
			get
			{
				return this._NGAYBATDAU;
			}
			set
			{
				if ((this._NGAYBATDAU != value))
				{
					this.OnNGAYBATDAUChanging(value);
					this.SendPropertyChanging();
					this._NGAYBATDAU = value;
					this.SendPropertyChanged("NGAYBATDAU");
					this.OnNGAYBATDAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYKETTHUC", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYKETTHUC
		{
			get
			{
				return this._NGAYKETTHUC;
			}
			set
			{
				if ((this._NGAYKETTHUC != value))
				{
					this.OnNGAYKETTHUCChanging(value);
					this.SendPropertyChanging();
					this._NGAYKETTHUC = value;
					this.SendPropertyChanged("NGAYKETTHUC");
					this.OnNGAYKETTHUCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISDELETE", DbType="Bit")]
		public System.Nullable<bool> ISDELETE
		{
			get
			{
				return this._ISDELETE;
			}
			set
			{
				if ((this._ISDELETE != value))
				{
					this.OnISDELETEChanging(value);
					this.SendPropertyChanging();
					this._ISDELETE = value;
					this.SendPropertyChanged("ISDELETE");
					this.OnISDELETEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHUYENMAI_CHITIETKM", Storage="_CHITIETKMs", ThisKey="ID", OtherKey="ID_KM")]
		public EntitySet<CHITIETKM> CHITIETKMs
		{
			get
			{
				return this._CHITIETKMs;
			}
			set
			{
				this._CHITIETKMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETKMs(CHITIETKM entity)
		{
			this.SendPropertyChanging();
			entity.KHUYENMAI = this;
		}
		
		private void detach_CHITIETKMs(CHITIETKM entity)
		{
			this.SendPropertyChanging();
			entity.KHUYENMAI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHANVIEN")]
	public partial class NHANVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TEN;
		
		private System.Nullable<System.DateTime> _NGAYSINH;
		
		private string _SDT;
		
		private string _TENDANGNHAP;
		
		private string _MATKHAU;
		
		private System.Nullable<int> _ID_QUYEN;
		
		private System.Nullable<bool> _ISDELETE;
		
		private EntitySet<HOADON> _HOADONs;
		
		private EntityRef<PHANQUYEN> _PHANQUYEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTENChanging(string value);
    partial void OnTENChanged();
    partial void OnNGAYSINHChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYSINHChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnTENDANGNHAPChanging(string value);
    partial void OnTENDANGNHAPChanged();
    partial void OnMATKHAUChanging(string value);
    partial void OnMATKHAUChanged();
    partial void OnID_QUYENChanging(System.Nullable<int> value);
    partial void OnID_QUYENChanged();
    partial void OnISDELETEChanging(System.Nullable<bool> value);
    partial void OnISDELETEChanged();
    #endregion
		
		public NHANVIEN()
		{
			this._HOADONs = new EntitySet<HOADON>(new Action<HOADON>(this.attach_HOADONs), new Action<HOADON>(this.detach_HOADONs));
			this._PHANQUYEN = default(EntityRef<PHANQUYEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TEN
		{
			get
			{
				return this._TEN;
			}
			set
			{
				if ((this._TEN != value))
				{
					this.OnTENChanging(value);
					this.SendPropertyChanging();
					this._TEN = value;
					this.SendPropertyChanged("TEN");
					this.OnTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYSINH", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYSINH
		{
			get
			{
				return this._NGAYSINH;
			}
			set
			{
				if ((this._NGAYSINH != value))
				{
					this.OnNGAYSINHChanging(value);
					this.SendPropertyChanging();
					this._NGAYSINH = value;
					this.SendPropertyChanged("NGAYSINH");
					this.OnNGAYSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Char(13)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENDANGNHAP", DbType="NVarChar(20)")]
		public string TENDANGNHAP
		{
			get
			{
				return this._TENDANGNHAP;
			}
			set
			{
				if ((this._TENDANGNHAP != value))
				{
					this.OnTENDANGNHAPChanging(value);
					this.SendPropertyChanging();
					this._TENDANGNHAP = value;
					this.SendPropertyChanged("TENDANGNHAP");
					this.OnTENDANGNHAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATKHAU", DbType="Char(10)")]
		public string MATKHAU
		{
			get
			{
				return this._MATKHAU;
			}
			set
			{
				if ((this._MATKHAU != value))
				{
					this.OnMATKHAUChanging(value);
					this.SendPropertyChanging();
					this._MATKHAU = value;
					this.SendPropertyChanged("MATKHAU");
					this.OnMATKHAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_QUYEN", DbType="Int")]
		public System.Nullable<int> ID_QUYEN
		{
			get
			{
				return this._ID_QUYEN;
			}
			set
			{
				if ((this._ID_QUYEN != value))
				{
					if (this._PHANQUYEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_QUYENChanging(value);
					this.SendPropertyChanging();
					this._ID_QUYEN = value;
					this.SendPropertyChanged("ID_QUYEN");
					this.OnID_QUYENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISDELETE", DbType="Bit")]
		public System.Nullable<bool> ISDELETE
		{
			get
			{
				return this._ISDELETE;
			}
			set
			{
				if ((this._ISDELETE != value))
				{
					this.OnISDELETEChanging(value);
					this.SendPropertyChanging();
					this._ISDELETE = value;
					this.SendPropertyChanged("ISDELETE");
					this.OnISDELETEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_HOADON", Storage="_HOADONs", ThisKey="ID", OtherKey="ID_NV")]
		public EntitySet<HOADON> HOADONs
		{
			get
			{
				return this._HOADONs;
			}
			set
			{
				this._HOADONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHANQUYEN_NHANVIEN", Storage="_PHANQUYEN", ThisKey="ID_QUYEN", OtherKey="ID", IsForeignKey=true)]
		public PHANQUYEN PHANQUYEN
		{
			get
			{
				return this._PHANQUYEN.Entity;
			}
			set
			{
				PHANQUYEN previousValue = this._PHANQUYEN.Entity;
				if (((previousValue != value) 
							|| (this._PHANQUYEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHANQUYEN.Entity = null;
						previousValue.NHANVIENs.Remove(this);
					}
					this._PHANQUYEN.Entity = value;
					if ((value != null))
					{
						value.NHANVIENs.Add(this);
						this._ID_QUYEN = value.ID;
					}
					else
					{
						this._ID_QUYEN = default(Nullable<int>);
					}
					this.SendPropertyChanged("PHANQUYEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHAXUATBAN")]
	public partial class NHAXUATBAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TEN;
		
		private string _SDT;
		
		private string _DIACHI;
		
		private string _FAX;
		
		private string _GIOITHIEU;
		
		private System.Nullable<bool> _ISDELETE;
		
		private EntitySet<PHIEUNHAP> _PHIEUNHAPs;
		
		private EntitySet<SACH> _SACHes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTENChanging(string value);
    partial void OnTENChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnFAXChanging(string value);
    partial void OnFAXChanged();
    partial void OnGIOITHIEUChanging(string value);
    partial void OnGIOITHIEUChanged();
    partial void OnISDELETEChanging(System.Nullable<bool> value);
    partial void OnISDELETEChanged();
    #endregion
		
		public NHAXUATBAN()
		{
			this._PHIEUNHAPs = new EntitySet<PHIEUNHAP>(new Action<PHIEUNHAP>(this.attach_PHIEUNHAPs), new Action<PHIEUNHAP>(this.detach_PHIEUNHAPs));
			this._SACHes = new EntitySet<SACH>(new Action<SACH>(this.attach_SACHes), new Action<SACH>(this.detach_SACHes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TEN
		{
			get
			{
				return this._TEN;
			}
			set
			{
				if ((this._TEN != value))
				{
					this.OnTENChanging(value);
					this.SendPropertyChanging();
					this._TEN = value;
					this.SendPropertyChanged("TEN");
					this.OnTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Char(13)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(MAX)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAX", DbType="Char(10)")]
		public string FAX
		{
			get
			{
				return this._FAX;
			}
			set
			{
				if ((this._FAX != value))
				{
					this.OnFAXChanging(value);
					this.SendPropertyChanging();
					this._FAX = value;
					this.SendPropertyChanged("FAX");
					this.OnFAXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOITHIEU", DbType="NVarChar(MAX)")]
		public string GIOITHIEU
		{
			get
			{
				return this._GIOITHIEU;
			}
			set
			{
				if ((this._GIOITHIEU != value))
				{
					this.OnGIOITHIEUChanging(value);
					this.SendPropertyChanging();
					this._GIOITHIEU = value;
					this.SendPropertyChanged("GIOITHIEU");
					this.OnGIOITHIEUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISDELETE", DbType="Bit")]
		public System.Nullable<bool> ISDELETE
		{
			get
			{
				return this._ISDELETE;
			}
			set
			{
				if ((this._ISDELETE != value))
				{
					this.OnISDELETEChanging(value);
					this.SendPropertyChanging();
					this._ISDELETE = value;
					this.SendPropertyChanged("ISDELETE");
					this.OnISDELETEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHAXUATBAN_PHIEUNHAP", Storage="_PHIEUNHAPs", ThisKey="ID", OtherKey="ID_NXB")]
		public EntitySet<PHIEUNHAP> PHIEUNHAPs
		{
			get
			{
				return this._PHIEUNHAPs;
			}
			set
			{
				this._PHIEUNHAPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHAXUATBAN_SACH", Storage="_SACHes", ThisKey="ID", OtherKey="ID_NXB")]
		public EntitySet<SACH> SACHes
		{
			get
			{
				return this._SACHes;
			}
			set
			{
				this._SACHes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHIEUNHAPs(PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.NHAXUATBAN = this;
		}
		
		private void detach_PHIEUNHAPs(PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.NHAXUATBAN = null;
		}
		
		private void attach_SACHes(SACH entity)
		{
			this.SendPropertyChanging();
			entity.NHAXUATBAN = this;
		}
		
		private void detach_SACHes(SACH entity)
		{
			this.SendPropertyChanging();
			entity.NHAXUATBAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHANQUYEN")]
	public partial class PHANQUYEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TEN;
		
		private System.Nullable<bool> _ISDELETE;
		
		private EntitySet<NHANVIEN> _NHANVIENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTENChanging(string value);
    partial void OnTENChanged();
    partial void OnISDELETEChanging(System.Nullable<bool> value);
    partial void OnISDELETEChanged();
    #endregion
		
		public PHANQUYEN()
		{
			this._NHANVIENs = new EntitySet<NHANVIEN>(new Action<NHANVIEN>(this.attach_NHANVIENs), new Action<NHANVIEN>(this.detach_NHANVIENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TEN
		{
			get
			{
				return this._TEN;
			}
			set
			{
				if ((this._TEN != value))
				{
					this.OnTENChanging(value);
					this.SendPropertyChanging();
					this._TEN = value;
					this.SendPropertyChanged("TEN");
					this.OnTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISDELETE", DbType="Bit")]
		public System.Nullable<bool> ISDELETE
		{
			get
			{
				return this._ISDELETE;
			}
			set
			{
				if ((this._ISDELETE != value))
				{
					this.OnISDELETEChanging(value);
					this.SendPropertyChanging();
					this._ISDELETE = value;
					this.SendPropertyChanged("ISDELETE");
					this.OnISDELETEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHANQUYEN_NHANVIEN", Storage="_NHANVIENs", ThisKey="ID", OtherKey="ID_QUYEN")]
		public EntitySet<NHANVIEN> NHANVIENs
		{
			get
			{
				return this._NHANVIENs;
			}
			set
			{
				this._NHANVIENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.PHANQUYEN = this;
		}
		
		private void detach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.PHANQUYEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIEUNHAP")]
	public partial class PHIEUNHAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ID_NXB;
		
		private System.Nullable<System.DateTime> _NGAYNHAP;
		
		private System.Nullable<int> _SOLUONG;
		
		private System.Nullable<bool> _ISDELETE;
		
		private EntitySet<CHITIETPHIEUNHAP> _CHITIETPHIEUNHAPs;
		
		private EntityRef<NHAXUATBAN> _NHAXUATBAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_NXBChanging(System.Nullable<int> value);
    partial void OnID_NXBChanged();
    partial void OnNGAYNHAPChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYNHAPChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    partial void OnISDELETEChanging(System.Nullable<bool> value);
    partial void OnISDELETEChanged();
    #endregion
		
		public PHIEUNHAP()
		{
			this._CHITIETPHIEUNHAPs = new EntitySet<CHITIETPHIEUNHAP>(new Action<CHITIETPHIEUNHAP>(this.attach_CHITIETPHIEUNHAPs), new Action<CHITIETPHIEUNHAP>(this.detach_CHITIETPHIEUNHAPs));
			this._NHAXUATBAN = default(EntityRef<NHAXUATBAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NXB", DbType="Int")]
		public System.Nullable<int> ID_NXB
		{
			get
			{
				return this._ID_NXB;
			}
			set
			{
				if ((this._ID_NXB != value))
				{
					if (this._NHAXUATBAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_NXBChanging(value);
					this.SendPropertyChanging();
					this._ID_NXB = value;
					this.SendPropertyChanged("ID_NXB");
					this.OnID_NXBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYNHAP", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYNHAP
		{
			get
			{
				return this._NGAYNHAP;
			}
			set
			{
				if ((this._NGAYNHAP != value))
				{
					this.OnNGAYNHAPChanging(value);
					this.SendPropertyChanging();
					this._NGAYNHAP = value;
					this.SendPropertyChanged("NGAYNHAP");
					this.OnNGAYNHAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISDELETE", DbType="Bit")]
		public System.Nullable<bool> ISDELETE
		{
			get
			{
				return this._ISDELETE;
			}
			set
			{
				if ((this._ISDELETE != value))
				{
					this.OnISDELETEChanging(value);
					this.SendPropertyChanging();
					this._ISDELETE = value;
					this.SendPropertyChanged("ISDELETE");
					this.OnISDELETEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUNHAP_CHITIETPHIEUNHAP", Storage="_CHITIETPHIEUNHAPs", ThisKey="ID", OtherKey="ID_PN")]
		public EntitySet<CHITIETPHIEUNHAP> CHITIETPHIEUNHAPs
		{
			get
			{
				return this._CHITIETPHIEUNHAPs;
			}
			set
			{
				this._CHITIETPHIEUNHAPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHAXUATBAN_PHIEUNHAP", Storage="_NHAXUATBAN", ThisKey="ID_NXB", OtherKey="ID", IsForeignKey=true)]
		public NHAXUATBAN NHAXUATBAN
		{
			get
			{
				return this._NHAXUATBAN.Entity;
			}
			set
			{
				NHAXUATBAN previousValue = this._NHAXUATBAN.Entity;
				if (((previousValue != value) 
							|| (this._NHAXUATBAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHAXUATBAN.Entity = null;
						previousValue.PHIEUNHAPs.Remove(this);
					}
					this._NHAXUATBAN.Entity = value;
					if ((value != null))
					{
						value.PHIEUNHAPs.Add(this);
						this._ID_NXB = value.ID;
					}
					else
					{
						this._ID_NXB = default(Nullable<int>);
					}
					this.SendPropertyChanged("NHAXUATBAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETPHIEUNHAPs(CHITIETPHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUNHAP = this;
		}
		
		private void detach_CHITIETPHIEUNHAPs(CHITIETPHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUNHAP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SACH")]
	public partial class SACH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TEN;
		
		private System.Nullable<int> _GIABAN;
		
		private System.Nullable<int> _GIANHAP;
		
		private string _MOTA;
		
		private System.Nullable<int> _ID_CHUDE;
		
		private System.Nullable<int> _ID_NXB;
		
		private string _BIA;
		
		private System.Nullable<int> _SOLUONG;
		
		private string _KHO;
		
		private System.Nullable<int> _SOTRANG;
		
		private System.Nullable<bool> _ISDELETE;
		
		private EntitySet<VIETSACH> _VIETSACHes;
		
		private EntitySet<CHITIETHOADON> _CHITIETHOADONs;
		
		private EntitySet<CHITIETKM> _CHITIETKMs;
		
		private EntitySet<CHITIETPHIEUNHAP> _CHITIETPHIEUNHAPs;
		
		private EntityRef<CHUDE> _CHUDE;
		
		private EntityRef<NHAXUATBAN> _NHAXUATBAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTENChanging(string value);
    partial void OnTENChanged();
    partial void OnGIABANChanging(System.Nullable<int> value);
    partial void OnGIABANChanged();
    partial void OnGIANHAPChanging(System.Nullable<int> value);
    partial void OnGIANHAPChanged();
    partial void OnMOTAChanging(string value);
    partial void OnMOTAChanged();
    partial void OnID_CHUDEChanging(System.Nullable<int> value);
    partial void OnID_CHUDEChanged();
    partial void OnID_NXBChanging(System.Nullable<int> value);
    partial void OnID_NXBChanged();
    partial void OnBIAChanging(string value);
    partial void OnBIAChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    partial void OnKHOChanging(string value);
    partial void OnKHOChanged();
    partial void OnSOTRANGChanging(System.Nullable<int> value);
    partial void OnSOTRANGChanged();
    partial void OnISDELETEChanging(System.Nullable<bool> value);
    partial void OnISDELETEChanged();
    #endregion
		
		public SACH()
		{
			this._VIETSACHes = new EntitySet<VIETSACH>(new Action<VIETSACH>(this.attach_VIETSACHes), new Action<VIETSACH>(this.detach_VIETSACHes));
			this._CHITIETHOADONs = new EntitySet<CHITIETHOADON>(new Action<CHITIETHOADON>(this.attach_CHITIETHOADONs), new Action<CHITIETHOADON>(this.detach_CHITIETHOADONs));
			this._CHITIETKMs = new EntitySet<CHITIETKM>(new Action<CHITIETKM>(this.attach_CHITIETKMs), new Action<CHITIETKM>(this.detach_CHITIETKMs));
			this._CHITIETPHIEUNHAPs = new EntitySet<CHITIETPHIEUNHAP>(new Action<CHITIETPHIEUNHAP>(this.attach_CHITIETPHIEUNHAPs), new Action<CHITIETPHIEUNHAP>(this.detach_CHITIETPHIEUNHAPs));
			this._CHUDE = default(EntityRef<CHUDE>);
			this._NHAXUATBAN = default(EntityRef<NHAXUATBAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TEN
		{
			get
			{
				return this._TEN;
			}
			set
			{
				if ((this._TEN != value))
				{
					this.OnTENChanging(value);
					this.SendPropertyChanging();
					this._TEN = value;
					this.SendPropertyChanged("TEN");
					this.OnTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIABAN", DbType="Int")]
		public System.Nullable<int> GIABAN
		{
			get
			{
				return this._GIABAN;
			}
			set
			{
				if ((this._GIABAN != value))
				{
					this.OnGIABANChanging(value);
					this.SendPropertyChanging();
					this._GIABAN = value;
					this.SendPropertyChanged("GIABAN");
					this.OnGIABANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIANHAP", DbType="Int")]
		public System.Nullable<int> GIANHAP
		{
			get
			{
				return this._GIANHAP;
			}
			set
			{
				if ((this._GIANHAP != value))
				{
					this.OnGIANHAPChanging(value);
					this.SendPropertyChanging();
					this._GIANHAP = value;
					this.SendPropertyChanged("GIANHAP");
					this.OnGIANHAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOTA", DbType="NVarChar(MAX)")]
		public string MOTA
		{
			get
			{
				return this._MOTA;
			}
			set
			{
				if ((this._MOTA != value))
				{
					this.OnMOTAChanging(value);
					this.SendPropertyChanging();
					this._MOTA = value;
					this.SendPropertyChanged("MOTA");
					this.OnMOTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_CHUDE", DbType="Int")]
		public System.Nullable<int> ID_CHUDE
		{
			get
			{
				return this._ID_CHUDE;
			}
			set
			{
				if ((this._ID_CHUDE != value))
				{
					if (this._CHUDE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_CHUDEChanging(value);
					this.SendPropertyChanging();
					this._ID_CHUDE = value;
					this.SendPropertyChanged("ID_CHUDE");
					this.OnID_CHUDEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NXB", DbType="Int")]
		public System.Nullable<int> ID_NXB
		{
			get
			{
				return this._ID_NXB;
			}
			set
			{
				if ((this._ID_NXB != value))
				{
					if (this._NHAXUATBAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_NXBChanging(value);
					this.SendPropertyChanging();
					this._ID_NXB = value;
					this.SendPropertyChanged("ID_NXB");
					this.OnID_NXBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BIA", DbType="VarChar(MAX)")]
		public string BIA
		{
			get
			{
				return this._BIA;
			}
			set
			{
				if ((this._BIA != value))
				{
					this.OnBIAChanging(value);
					this.SendPropertyChanging();
					this._BIA = value;
					this.SendPropertyChanged("BIA");
					this.OnBIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KHO", DbType="Char(50)")]
		public string KHO
		{
			get
			{
				return this._KHO;
			}
			set
			{
				if ((this._KHO != value))
				{
					this.OnKHOChanging(value);
					this.SendPropertyChanging();
					this._KHO = value;
					this.SendPropertyChanged("KHO");
					this.OnKHOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOTRANG", DbType="Int")]
		public System.Nullable<int> SOTRANG
		{
			get
			{
				return this._SOTRANG;
			}
			set
			{
				if ((this._SOTRANG != value))
				{
					this.OnSOTRANGChanging(value);
					this.SendPropertyChanging();
					this._SOTRANG = value;
					this.SendPropertyChanged("SOTRANG");
					this.OnSOTRANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISDELETE", DbType="Bit")]
		public System.Nullable<bool> ISDELETE
		{
			get
			{
				return this._ISDELETE;
			}
			set
			{
				if ((this._ISDELETE != value))
				{
					this.OnISDELETEChanging(value);
					this.SendPropertyChanging();
					this._ISDELETE = value;
					this.SendPropertyChanged("ISDELETE");
					this.OnISDELETEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SACH_VIETSACH", Storage="_VIETSACHes", ThisKey="ID", OtherKey="ID_SACH")]
		public EntitySet<VIETSACH> VIETSACHes
		{
			get
			{
				return this._VIETSACHes;
			}
			set
			{
				this._VIETSACHes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SACH_CHITIETHOADON", Storage="_CHITIETHOADONs", ThisKey="ID", OtherKey="ID_SACH")]
		public EntitySet<CHITIETHOADON> CHITIETHOADONs
		{
			get
			{
				return this._CHITIETHOADONs;
			}
			set
			{
				this._CHITIETHOADONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SACH_CHITIETKM", Storage="_CHITIETKMs", ThisKey="ID", OtherKey="ID_SACH")]
		public EntitySet<CHITIETKM> CHITIETKMs
		{
			get
			{
				return this._CHITIETKMs;
			}
			set
			{
				this._CHITIETKMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SACH_CHITIETPHIEUNHAP", Storage="_CHITIETPHIEUNHAPs", ThisKey="ID", OtherKey="ID_SACH")]
		public EntitySet<CHITIETPHIEUNHAP> CHITIETPHIEUNHAPs
		{
			get
			{
				return this._CHITIETPHIEUNHAPs;
			}
			set
			{
				this._CHITIETPHIEUNHAPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUDE_SACH", Storage="_CHUDE", ThisKey="ID_CHUDE", OtherKey="ID", IsForeignKey=true)]
		public CHUDE CHUDE
		{
			get
			{
				return this._CHUDE.Entity;
			}
			set
			{
				CHUDE previousValue = this._CHUDE.Entity;
				if (((previousValue != value) 
							|| (this._CHUDE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHUDE.Entity = null;
						previousValue.SACHes.Remove(this);
					}
					this._CHUDE.Entity = value;
					if ((value != null))
					{
						value.SACHes.Add(this);
						this._ID_CHUDE = value.ID;
					}
					else
					{
						this._ID_CHUDE = default(Nullable<int>);
					}
					this.SendPropertyChanged("CHUDE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHAXUATBAN_SACH", Storage="_NHAXUATBAN", ThisKey="ID_NXB", OtherKey="ID", IsForeignKey=true)]
		public NHAXUATBAN NHAXUATBAN
		{
			get
			{
				return this._NHAXUATBAN.Entity;
			}
			set
			{
				NHAXUATBAN previousValue = this._NHAXUATBAN.Entity;
				if (((previousValue != value) 
							|| (this._NHAXUATBAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHAXUATBAN.Entity = null;
						previousValue.SACHes.Remove(this);
					}
					this._NHAXUATBAN.Entity = value;
					if ((value != null))
					{
						value.SACHes.Add(this);
						this._ID_NXB = value.ID;
					}
					else
					{
						this._ID_NXB = default(Nullable<int>);
					}
					this.SendPropertyChanged("NHAXUATBAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VIETSACHes(VIETSACH entity)
		{
			this.SendPropertyChanging();
			entity.SACH = this;
		}
		
		private void detach_VIETSACHes(VIETSACH entity)
		{
			this.SendPropertyChanging();
			entity.SACH = null;
		}
		
		private void attach_CHITIETHOADONs(CHITIETHOADON entity)
		{
			this.SendPropertyChanging();
			entity.SACH = this;
		}
		
		private void detach_CHITIETHOADONs(CHITIETHOADON entity)
		{
			this.SendPropertyChanging();
			entity.SACH = null;
		}
		
		private void attach_CHITIETKMs(CHITIETKM entity)
		{
			this.SendPropertyChanging();
			entity.SACH = this;
		}
		
		private void detach_CHITIETKMs(CHITIETKM entity)
		{
			this.SendPropertyChanging();
			entity.SACH = null;
		}
		
		private void attach_CHITIETPHIEUNHAPs(CHITIETPHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.SACH = this;
		}
		
		private void detach_CHITIETPHIEUNHAPs(CHITIETPHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.SACH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TACGIA")]
	public partial class TACGIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TEN;
		
		private string _DIACHI;
		
		private string _SDT;
		
		private System.Nullable<bool> _ISDELETE;
		
		private EntitySet<VIETSACH> _VIETSACHes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTENChanging(string value);
    partial void OnTENChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnISDELETEChanging(System.Nullable<bool> value);
    partial void OnISDELETEChanged();
    #endregion
		
		public TACGIA()
		{
			this._VIETSACHes = new EntitySet<VIETSACH>(new Action<VIETSACH>(this.attach_VIETSACHes), new Action<VIETSACH>(this.detach_VIETSACHes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TEN
		{
			get
			{
				return this._TEN;
			}
			set
			{
				if ((this._TEN != value))
				{
					this.OnTENChanging(value);
					this.SendPropertyChanging();
					this._TEN = value;
					this.SendPropertyChanged("TEN");
					this.OnTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(50)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Char(13)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISDELETE", DbType="Bit")]
		public System.Nullable<bool> ISDELETE
		{
			get
			{
				return this._ISDELETE;
			}
			set
			{
				if ((this._ISDELETE != value))
				{
					this.OnISDELETEChanging(value);
					this.SendPropertyChanging();
					this._ISDELETE = value;
					this.SendPropertyChanged("ISDELETE");
					this.OnISDELETEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TACGIA_VIETSACH", Storage="_VIETSACHes", ThisKey="ID", OtherKey="ID_TACGIA")]
		public EntitySet<VIETSACH> VIETSACHes
		{
			get
			{
				return this._VIETSACHes;
			}
			set
			{
				this._VIETSACHes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VIETSACHes(VIETSACH entity)
		{
			this.SendPropertyChanging();
			entity.TACGIA = this;
		}
		
		private void detach_VIETSACHes(VIETSACH entity)
		{
			this.SendPropertyChanging();
			entity.TACGIA = null;
		}
	}
}
#pragma warning restore 1591
